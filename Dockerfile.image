# Binaries and files needed from elemental-toolkit repository
ARG LUET_VERSION=0.32.5
ARG COS_VERSION=0.10.3
ARG K9S_VERSION=latest
FROM quay.io/luet/base:$LUET_VERSION AS framework-build
COPY framework/files/etc/luet/luet.yaml /etc/luet/luet.yaml
ENV LUET_NOLOCK=true

# Hack to get grub2 artifacts into the correct places
SHELL ["/usr/bin/luet", "install", "-y", "--system-target", "/grub-artifacts"]
RUN system/grub2-artifacts

ARG TARGETARCH
ARG TARGETPLATFORM

FROM --platform=$TARGETPLATFORM quay.io/derailed/k9s:$K9S_VERSION AS k9s

FROM quay.io/costoolkit/releases-orange:cos-system-${COS_VERSION} AS base-os-amd64
FROM quay.io/costoolkit/releases-orange-arm64:cos-system-${COS_VERSION} AS base-os-arm64
FROM base-os-${TARGETARCH} AS default

# grub2-artifacts hack
COPY --from=framework-build /grub-artifacts/ /usr/share/efi/
COPY --from=framework-build /grub-artifacts/ /usr/share/grub2/

# Copy local framework files
COPY framework/files/ /

RUN curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.noarmor.gpg | tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null && \
    curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.tailscale-keyring.list | tee /etc/apt/sources.list.d/tailscale.list

RUN apt-get update && apt-get autoclean && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    tailscale \
    jq \
    qrencode \
    dmidecode \
    console-data \
    iscsiuio \
    snapd \
    openssh-server \
    sudo \
    netplan.io \
    iptables-persistent \
    net-tools \
    inetutils-ping \
    dnsutils \
    vim \
    file \
    musl \
    htop \
    tree

# RUN snap download microk8s --channel=$MICROK8S_CHANNEL --target-directory /opt/microk8s/snaps --basename microk8s
# RUN snap download core --target-directory /opt/microk8s/snaps --basename core

COPY scripts/cloudinit /opt/microk8s/scripts

RUN chmod +x /opt/microk8s/scripts/*

COPY overlay/files /

RUN setupcon --save

COPY --from=k9s /bin/k9s /usr/bin/k9s

# RUN apt install -y linux-image-generic initramfs-tools

## Workarounds for elemental installer looking for shim files (https://github.com/rancher/elemental-cli/blob/19a9832efe6cc5411f76f97204543700a7d45ea6/pkg/utils/grub.go#LL196C63-L196C81)
RUN apt install -y grub-efi shim shim-signed

RUN ln -s /usr/bin/grub-editenv /usr/bin/grub2-editenv
RUN systemctl enable systemd-networkd
RUN systemctl enable ssh
RUN systemctl disable set-hostname.service
RUN systemctl enable microk8s-tailscale-apiserver-ip.service
RUN systemctl enable tailscale-logind.service
RUN systemctl enable tailscaled.service

# Enable tmp
RUN cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/ 
RUN systemctl enable tmp.mount

# Fixup sudo perms
RUN chown root:root /usr/bin/sudo && chmod 4755 /usr/bin/sudo


# Clear cache
RUN rm -rf /var/cache/* && journalctl --vacuum-size=1K && (rm /etc/machine-id || true) && (rm /var/lib/dbus/machine-id || true) && (rm /etc/hostname || true)
# Remove SSH Host keys generated from installing the openssh-server
RUN rm -rf /etc/ssh/ssh_host_*

# # Rebuild initrd to setup dracut with the boot configurations
RUN kernel=$(readlink -f /boot/vmlinuz) && \
    version=${kernel##/boot/vmlinuz-} && \
    mkinitrd /boot/initrd-${version} ${version} && \
    cd /boot && ln -sf initrd-${version} initrd


ARG OS_NAME=edgenode OS_VERSION=latest OS_ID=edgenode BUG_REPORT_URL HOME_URL OS_REPO OS_LABEL GITHUB_REPO IMAGE_COMMIT
RUN envsubst > /etc/os-release < /usr/lib/os-release.tmpl